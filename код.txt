package com.example.pr2



import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Card
import androidx.compose.material3.CardDefaults
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp


class MainActivity2 : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            Prog2()

            }
        }
    }
@Preview(showBackground = true)
@Composable
fun Prog2() {

Column(modifier = Modifier
    .fillMaxSize()
    .background(Color.Gray)
){


    Card(

        modifier = Modifier
            .fillMaxWidth()
            .padding(20.dp),
        elevation = CardDefaults.cardElevation(5.dp),

        )
    {


        Row(
            modifier = Modifier
                .fillMaxWidth(),
            horizontalArrangement = Arrangement.Start
        )
        {
            Image(

                painter = painterResource(id = R.drawable.ic_launcher_background),
                contentDescription = "Описание изображения",
                modifier = Modifier
                    .clip(CircleShape)
                    .size(80.dp)

            )
            Column(
                modifier = Modifier
                    .size(90.dp)

                    .padding(end = 10.dp),


                ) {
                Text(text = "Барсик")
                Text(text = "Короткош.")
            }

        }
    }

    Card(

        modifier = Modifier
            .fillMaxWidth()
            .padding(20.dp)
            ,

        elevation = CardDefaults.cardElevation(5.dp),

        )
    {


        Row(
            modifier = Modifier
                .fillMaxWidth(),
            horizontalArrangement = Arrangement.Start
        )
        {
            Image(

                painter = painterResource(id = R.drawable.ic_launcher_background),
                contentDescription = "Описание изображения",
                modifier = Modifier
                    .clip(CircleShape)
                    .size(80.dp)

            )
            Column(
                modifier = Modifier
                    .size(90.dp)

                    .padding(end = 10.dp),


                ) {
                Text(text = "Шлёппа")
                Text(text = "Каракал")
            }

        }
    }

    Card(

        modifier = Modifier
            .fillMaxWidth()
            .padding(20.dp)
            ,

        elevation = CardDefaults.cardElevation(5.dp),

        )
    {


        Row(
            modifier = Modifier
                .fillMaxWidth(),
            horizontalArrangement = Arrangement.Start
        )
        {
            Image(

                painter = painterResource(id = R.drawable.ic_launcher_background),
                contentDescription = "Описание изображения",
                modifier = Modifier
                    .clip(CircleShape)
                    .size(80.dp)

            )
            Column(
                modifier = Modifier
                    .size(90.dp)

                    .padding(end = 10.dp),


                ) {
                Text(text = "Чмоня")
                Text(text = "Котейка")
            }

        }
    }
    Column (modifier = Modifier.verticalScroll(rememberScrollState())) {

    }








        }
}